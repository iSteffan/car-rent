{"version":3,"file":"static/js/933.25e73d1a.chunk.js","mappings":"wPAEaA,EAAgBC,EAAAA,GAAAA,IAAH,uFAMbC,EAAQD,EAAAA,GAAAA,IAAH,wGCNLE,EAAMF,EAAAA,GAAAA,IAAH,qFAMHG,EAAcH,EAAAA,GAAAA,IAAH,+JAUXI,EAAaJ,EAAAA,GAAAA,IAAH,ygB,SCfVK,EAAU,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAEtBC,EASED,EATFC,KACAC,EAQEF,EARFE,MACAC,EAOEH,EAPFG,KACAC,EAMEJ,EANFI,YACAC,EAKEL,EALFK,QACAC,EAIEN,EAJFM,cACAC,EAGEP,EAHFO,KACAC,EAEER,EAFFQ,QACAC,EACET,EADFS,gBAGIC,EChBmB,SAAAC,GACzB,IAAMC,EAAQD,EAAYE,MAAM,KAChC,GAAID,EAAME,QAAU,EAAG,CACrB,IACMC,EADaH,EAAM,GAAGI,OACHH,MAAM,KAC/B,GAAIE,EAAMD,OAAS,EACjB,OAAOC,EAAM,EAEhB,CACD,OAAO,IACR,CDMcE,CAAYZ,GACnBa,ECLsB,SAAAP,GAC5B,IAAMC,EAAQD,EAAYE,MAAM,KAChC,GAAID,EAAME,QAAU,EAAG,CACrB,IACMC,EADYH,EAAM,GAAGI,OACHH,MAAM,KAC9B,GAAIE,EAAMD,OAAS,EACjB,OAAOC,EAAM,EAEhB,CACD,OAAO,IACR,CDLiBI,CAAed,GAE/B,OACE,UAACT,EAAD,YACE,UAACC,EAAD,YACE,yBACGI,GACD,kBAAMmB,MAAO,CAAEC,MAAO,WAAtB,UAAmC,IAAEnB,KAAa,KAAGC,MAEvD,uBAAIC,QAEN,UAACN,EAAD,YACE,uBAAIY,KACJ,uBAAIQ,KACJ,uBAAIZ,KACJ,uBAAIC,KACJ,uBAAIL,KACJ,uBAAIM,KACJ,uBAAIC,EAAgB,UAI3B,EEpCYa,EAAU,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACxB,OACE,yBACE,UAAC9B,EAAD,YACE,SAACE,EAAD,CAAO6B,IAAKD,EAAKE,IAAKC,IAAKH,EAAKI,eAChC,SAAC5B,EAAD,CAASC,KAAMuB,QAItB,ECVYK,EAAOlC,EAAAA,GAAAA,GAAH,4HCyBjB,EApBgB,WACd,IAAMmC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACRF,GAASG,EAAAA,EAAAA,KACV,GAAE,CAACH,IAEJ,IAAMI,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,IAE1B,OACE,0BACE,SAACP,EAAD,UACGK,EAAMG,KAAI,SAAAb,GAAI,OACb,SAACD,EAAD,CAAuBC,KAAMA,GAAfA,EAAKc,GADN,OAMtB,C","sources":["components/CarCard/CarCard.styled.js","components/CarData/CarData.styled.js","components/CarData/CarData.jsx","utils/extractor.jsx","components/CarCard/CarCard.jsx","pages/Catalog.styled.js","pages/Catalog.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CardContainer = styled.div`\n  width: 274px;\n  height: 600px;\n  outline: 1px solid gray;\n`;\n\nexport const Image = styled.img`\n  width: 274px;\n  height: 268px;\n  object-fit: cover;\n  border-radius: 9px;\n`;\n","import styled from 'styled-components';\n\nexport const Box = styled.div`\n  width: 100%;\n  height: auto;\n  outline: 1px solid gray;\n`;\n\nexport const MainDataBox = styled.div`\n  display: flex;\n  justify-content: space-between;\n\n  width: 100%;\n  height: auto;\n  color: #121417;\n  outline: 1px solid gray;\n`;\n\nexport const DetailsBox = styled.div`\n  margin-top: 8px;\n  display: flex;\n  align-items: center;\n  flex-wrap: wrap;\n  row-gap: 4px;\n\n  height: 40px;\n  overflow: hidden;\n  /* white-space: nowrap;\n  text-overflow: ellipsis; */\n\n  p {\n    margin: 0;\n    font-size: 12px;\n    line-height: 1.5;\n    color: rgba(18, 20, 23, 0.5);\n  }\n\n  p + p::before {\n    content: '';\n    width: 6px;\n    height: 16px;\n    margin: 0 6px;\n    border: 1px solid rgba(18, 20, 23, 0.1);\n  }\n  width: 100%;\n  outline: 1px solid gray;\n`;\n","import { Box, MainDataBox, DetailsBox } from './CarData.styled';\nimport { extractCity, extractCountry } from 'utils/extractor';\n\nexport const CarData = ({ data }) => {\n  const {\n    make,\n    model,\n    year,\n    rentalPrice,\n    address,\n    rentalCompany,\n    type,\n    mileage,\n    functionalities,\n  } = data;\n\n  const city = extractCity(address);\n  const country = extractCountry(address);\n\n  return (\n    <Box>\n      <MainDataBox>\n        <p>\n          {make}\n          <span style={{ color: '#3470FF' }}> {model}</span>, {year}\n        </p>\n        <p>{rentalPrice}</p>\n      </MainDataBox>\n      <DetailsBox>\n        <p>{city}</p>\n        <p>{country}</p>\n        <p>{rentalCompany}</p>\n        <p>{type}</p>\n        <p>{model}</p>\n        <p>{mileage}</p>\n        <p>{functionalities[0]}</p>\n      </DetailsBox>\n    </Box>\n  );\n};\n","export const extractCity = inputString => {\n  const parts = inputString.split(',');\n  if (parts.length >= 2) {\n    const secondPart = parts[1].trim();\n    const words = secondPart.split(' ');\n    if (words.length > 0) {\n      return words[0];\n    }\n  }\n  return null;\n};\n\nexport const extractCountry = inputString => {\n  const parts = inputString.split(',');\n  if (parts.length >= 3) {\n    const thirdPart = parts[2].trim();\n    const words = thirdPart.split(' ');\n    if (words.length > 0) {\n      return words[0];\n    }\n  }\n  return null;\n};\n","import { CardContainer, Image } from './CarCard.styled';\nimport { CarData } from 'components/CarData/CarData';\n\nexport const CarCard = ({ item }) => {\n  return (\n    <li>\n      <CardContainer>\n        <Image src={item.img} alt={item.description} />\n        <CarData data={item} />\n      </CardContainer>\n    </li>\n  );\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  row-gap: 50px;\n  column-gap: 29px;\n\n  list-style: none;\n`;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchAdverts } from 'redux/advertOperations';\nimport { selectAdverts } from 'redux/advertSlice';\nimport { CarCard } from 'components/CarCard/CarCard';\nimport { List } from './Catalog.styled';\n\nconst Catalog = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchAdverts());\n  }, [dispatch]);\n\n  const items = useSelector(selectAdverts);\n  // console.log(items);\n  return (\n    <div>\n      <List>\n        {items.map(item => (\n          <CarCard key={item.id} item={item} />\n        ))}\n      </List>\n    </div>\n  );\n};\n\nexport default Catalog;\n"],"names":["CardContainer","styled","Image","Box","MainDataBox","DetailsBox","CarData","data","make","model","year","rentalPrice","address","rentalCompany","type","mileage","functionalities","city","inputString","parts","split","length","words","trim","extractCity","country","extractCountry","style","color","CarCard","item","src","img","alt","description","List","dispatch","useDispatch","useEffect","fetchAdverts","items","useSelector","selectAdverts","map","id"],"sourceRoot":""}